# -------------------------------------------------------------------------------------
#
# Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.
#
# This software is the property of WSO2 LLC. and its suppliers, if any.
# Dissemination of any information or reproduction of any material contained 
# herein is strictly forbidden, unless permitted by WSO2 in accordance with the 
# WSO2 Commercial License available at https://wso2.com/licenses/eula/3.2
#
# --------------------------------------------------------------------------------------

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "am-all-in-one.fullname" . }}-conf-entrypoint
  namespace: {{ .Release.Namespace }}
data:
  docker-entrypoint.sh: |
    #!/bin/bash
    set -e

    # volume mounts
    config_volume=${WORKING_DIRECTORY}/wso2-config-volume
    artifact_volume=${WORKING_DIRECTORY}/wso2-artifact-volume

    # check if the WSO2 non-root user home exists
    test ! -d ${WORKING_DIRECTORY} && echo "WSO2 Docker non-root user home does not exist" && exit 1

    # check if the WSO2 product home exists
    test ! -d ${WSO2_SERVER_HOME} && echo "WSO2 Docker product home does not exist" && exit 1

    # Copying carbon_db
    if ! test -f /home/wso2carbon/solr/database/WSO2CARBON_DB.mv.db
    then
      echo "Copying WSO2CARBON_DB.mv.db" >&2
      cp ${WSO2_SERVER_HOME}/repository/database/WSO2CARBON_DB.mv.db /home/wso2carbon/solr/database/
    fi

    # copy any configuration changes mounted to config_volume
    test -d ${config_volume} && [[ "$(ls -A ${config_volume})" ]] && cp -RL ${config_volume}/* ${WSO2_SERVER_HOME}/
    # copy any artifact changes mounted to artifact_volume
    test -d ${artifact_volume} && [[ "$(ls -A ${artifact_volume})" ]] && cp -RL ${artifact_volume}/* ${WSO2_SERVER_HOME}/

    {{- if .Values.wso2.apim.secureVaultEnabled }}
    # copy internal keystore credentials to password-tmp file for cipher-tool usage
    {{- if .Values.azure.enabled }}
    cp /mnt/secrets-store/{{ .Values.azure.keyVault.secretIdentifiers.internalKeystorePassword }} ${WSO2_SERVER_HOME}/password-tmp
    {{- else if .Values.aws.enabled }}
    cp /mnt/secrets-store/{{ .Values.aws.secretsManager.secretIdentifiers.internalKeystorePassword.secretKey }} ${WSO2_SERVER_HOME}/password-tmp
    {{- else if .Values.gcp.enabled }}
    cp /mnt/secrets-store/{{ .Values.gcp.secretsManager.secret.secretName }} ${WSO2_SERVER_HOME}/password-tmp
    {{- end }}
    {{- end }}

    # start WSO2 Carbon server
    sh ${WSO2_SERVER_HOME}/bin/api-manager.sh "$@"
